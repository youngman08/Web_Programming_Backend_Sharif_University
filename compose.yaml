services:
  redis:
    image: redis:6-alpine
    ports:
      - 6379:6379

  db:
    image: postgres:15.1-bullseye
    volumes:
      - type: bind
        source: ./db-init
        target: /docker-entrypoint-initdb.d
        read_only: true
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: "pg_isready -h db -d $${POSTGRES_DB} -U $${POSTGRES_USER}"
      interval: 5s
      start_period: 45s
    ports:
      - "5432:5432"

  parse-server:
    image: parseplatform/parse-server:5.4.0
    depends_on:
      db:
        condition: service_healthy
    environment:
      PARSE_SERVER_DATABASE_URI: postgres://postgres:postgres@db:5432/postgres
      PARSE_SERVER_APPLICATION_ID: myAppId
      PARSE_SERVER_MASTER_KEY: myMasterKey
      PARSE_SERVER_URL: http://localhost:1337/
      PARSE_SERVER_MOUNT_PATH: /
    ports:
      - "1337:1337"
  parse-dashboard:
    image: parseplatform/parse-dashboard:5.0.0
    depends_on:
      - parse-server
    command: ["--dev"]
    environment:
      PARSE_DASHBOARD_APP_ID: myAppId
      PARSE_DASHBOARD_MASTER_KEY: myMasterKey
      PARSE_DASHBOARD_SERVER_URL: http://localhost:1337/
    ports:
      - "4040:4040"

  auth:
    image: auth:1.0.0
    build:
      context: "./auth"
      dockerfile: Dockerfile.backend
    command: "go run main.go"
    pull_policy: build
    ports:
      - 3001:3001
    depends_on:
      - db
      - redis

  front:
    image: front:1.0.0
    build:
      context: "./front"
      dockerfile: Dockerfile
    pull_policy: build
    ports:
      - 8000:8080

  ticket:
    image: ticket:1.0.0
    pull_policy: build
    build:
      context: "./express"
      dockerfile: Dockerfile

  bank:
    image: bank:1.0.0
    pull_policy: build
    build:
      context: "./Bank"
      dockerfile: Dockerfile

volumes:
  db-data:
